Tá faltando (em ordem de prioridade):

    Objetos podem sair da visão da câmera (fácil d+)
    Operação Escalonar
    Camêra enquanto objeto (seguir personagem)
    Texto (com fontes)
    Leitura de Eixos (Cursor)
    Multi-cenário
    Funções para operações com arquivos.
    Física simples (gravidade, colisões elásticas sem rotação)
    Operação Rotacionar
    Mecânica de Particulas
    Física mais complexa (Colisões em ângulos variáveis, ponto de gravidade, alavancas)

    Depois de tudo isto pronto:
        Condensar as funções e classes esparças, mas funcionais, em uma biblioteca
            (Ficarão muitas funções semelhantes, como Detectar_coli_Point_Hitbox e Detectar_coli_Square_Hitbox).
            (A quantidade grande de funções vai ser justificada.)
        Fazer modificações para aumentar eficiência
            (Lembrar que isso tudo vai virar C++ depois. Tenho que levar em conta as limitações da linguagem)
                (Provavelmente vai ser bom fazer algumas funções especiais para tratar de alocação de memória,)
                (operações com Imagens, listas, e etc de forma otimizada.)
            (Idealmente, devo fazer várias derivadas da mesma função, por eficiência)
        Transformar essa biblioteca em Python em uma biblioteca em C++.
            (Ainda tenho que resolver o problema dos atributos não canônicos da classe em Python)
            (Será que existe um mecanismo em C++ para fazer isso?)
                (Se sim, ótimo)
                (Se não, colocar um Vetor de Atributos Extra, em que cada atributo:
                    class Attr_Extr{
                        public:
                            string name;
                            void* value;
                            string type;
                    }
                (Idealmente, pode-se trocar "name" e "type" para int, mas isso é pra depois).

        Agora, por fim, é possível fazer um "jogo", uma interface. Nela, por exemplo, ao fazer um comando de teclado,
        aparece um menu para inserir um novo Asset no cenário, ou inserir um novo cenário ao, ao posicionar o cursor sobre
        um objeto, fazer um comando para abrir um menu e editar suas Scrips e animações. Operações como agarrar e puxar.
        Outros atalhos podem, por exemplo, na operação de Salvar, ao invés de salvar como cenário, salvar na forma de código
        em C++ as Scripts das Animações, do Cenário, o laço principal de jogo, e tudo mais, e depois compilar isto em um .exe.
        Idealmente, neste ponto, o Apeiroform já tornou uma Game Engine 2D completa.





Até agora:

Hitboxes:
    Ponto
    Retangulo
    Colisão de Ponto em movimento com retângulo (não generico)
    [FALTANDO]:
        Hitbox circular
        Hitbox Poligonal
        Demais tipos de colisão


Sprites:
    Animação já funciona:
        Enquanto dado evento ocorrer, animação acontece de acordo com padrão pré-definido.
        Animação infinita, em loop, interrompível por algum condicional.
        [FALTANDO]:
            Tenho que fazer alguma mecânica pra facilitar animações de tempo variável, por exemplo

Meta:
    Câmera:
        Fixa
        Programa trava se objetos saem da perspectiva (tenho que corrigir isso urgente).
    Entradas:
        Somente Teclas, por enquanto
        [FALTA ainda fazer as mecânicas de eventos "ao clicar" e "ao soltar" para as teclas]
